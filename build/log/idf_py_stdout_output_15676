[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\EspressifIDF\workspace\bridge\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/EspressifIDF/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/EspressifIDF/workspace/bridge/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/bridge_example_main.c.obj
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c: In function 'eth_event_handler':
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:74:18: warning: unused variable 'eth_netif' [-Wunused-variable]
   74 |     esp_netif_t *eth_netif = (esp_netif_t *)arg;
      |                  ^~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c: In function 'eth_handler':
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:99:28: warning: unused variable 'event' [-Wunused-variable]
   99 |         ip_event_got_ip_t *event = (ip_event_got_ip_t *)event_data;
      |                            ^~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c: In function 'spi_init':
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:135:25: warning: unused variable 'spi_handle' [-Wunused-variable]
  135 |     spi_device_handle_t spi_handle = NULL;
      |                         ^~~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c: In function 'app_main':
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:296:32: warning: unused variable 'netif_cfg' [-Wunused-variable]
  296 |             esp_netif_config_t netif_cfg = {
      |                                ^~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c: At top level:
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:96:13: warning: 'eth_handler' defined but not used [-Wunused-function]
   96 | static void eth_handler(void *arg, esp_event_base_t event_base, int32_t event_id, void *event_data) {
      |             ^~~~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:50:13: warning: 'print_netif_ip_info' defined but not used [-Wunused-function]
   50 | static void print_netif_ip_info(esp_netif_t *netif) {
      |             ^~~~~~~~~~~~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:40:13: warning: 'wifi_event_handler' defined but not used [-Wunused-function]
   40 | static void wifi_event_handler(void *arg, esp_event_base_t event_base, int32_t event_id, void *event_data) {
      |             ^~~~~~~~~~~~~~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:35:20: warning: 'TAG_AP' defined but not used [-Wunused-variable]
   35 | static const char *TAG_AP = "WiFi-AP";
      |                    ^~~~~~
D:/EspressifIDF/workspace/bridge/main/bridge_example_main.c:34:20: warning: 'TAG_STA' defined but not used [-Wunused-variable]
   34 | static const char *TAG_STA = "WiFi-Sta";
      |                    ^~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable bridge.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/EspressifIDF/workspace/bridge/build/bridge.bin
[7/8] cmd.exe /C "cd /D D:\EspressifIDF\workspace\bridge\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/EspressifIDF/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/EspressifIDF/workspace/bridge/build/partition_table/partition-table.bin D:/EspressifIDF/workspace/bridge/build/bridge.bin"
bridge.bin binary size 0x5d630 bytes. Smallest app partition is 0x100000 bytes. 0xa29d0 bytes (64%) free.
[7/8] cmd.exe /C "cd /D D:\EspressifIDF\components\esptool_py && D:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/EspressifIDF -D SERIAL_TOOL=D:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;D:/EspressifIDF/components/esptoolesptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 bridge.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM3
Connecting...............
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 24:dc:c3:98:c3:98
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0006dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16365...
Writing at 0x00001000... (100 %)
Wrote 26720 bytes (16365 compressed) at 0x00001000 in 0.5 seconds (effective 414.0 kbit/s)...
Hash of data verified.
Compressed 382512 bytes to 211390...
Writing at 0x00010000... (7 %)
Writing at 0x0001e1ec... (15 %)
Writing at 0x0002a42f... (23 %)
Writing at 0x0002ffcf... (30 %)
Writing at 0x00035a3b... (38 %)
Writing at 0x0003bb55... (46 %)
Writing at 0x000418b2... (53 %)
Writing at 0x000471c6... (61 %)
Writing at 0x0004cdbd... (69 %)
Writing at 0x000529aa... (76 %)
Writing at 0x000585e3... (84 %)
Writing at 0x0005fe09... (92 %)
Writing at 0x00067882... (100 %)
Wrote 382512 bytes (211390 compressed) at 0x00010000 in 4.9 seconds (effective 624.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1304.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/EspressifIDF/workspace/bridge/build -P D:/EspressifIDF/components/esptool_py/run_serial_tool.cmake"
